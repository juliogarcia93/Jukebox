@model AccountModel
@using DataAccessLayer.Models;
@using Jukebox.Models;


<header>
    <title>Profile</title>
</header>
<body id="profile-view">
<div class="profile-container container-fluid" id="profile-page-wrapper">
    <div class="row">
        <h3>Welcome @User.Identity.Name!
            <div id="testtest">Song</div>
            <div id="testtest2">Album</div>
            <a class="btn btn-primary pull-right" data-toggle="modal" href="#profileModal">
                <span class="glyphicon glyphicon-music"></span>
                 Upload Music
            </a>
            <a class="btn btn-primary pull-right" data-toggle="modal" href="#createPlaylistModal">
                <span class="glyphicon glyphicon-plus"></span>
                Create Playlist
            </a>
        </h3>
    </div>
    <div class="row">
            <div class="col col-lg-9" id="profile-table-wrapper">

                <div class="form-group">
                    <input type="text" class="form-control" placeholder="Search" id="profile-search">
                </div>
                @Html.Partial("_PlaylistPartial", Model.Songs)
            </div>
        <div class="col col-lg-3">
            <ul class="nav nav-pills nav-stacked">
                <li class="clearfix"><a href="#">Songs<span class="badge pull-right">@Model.Songs.Count()</span></a></li>
                <li class="clearfix"><a href="#">Playlists<span class="badge pull-right">@Model.Playlists.Count()</span></a></li>
                <li class="clearfix"><a href="#">Likes<span class="badge pull-right">0</span></a></li>
                <li class="clearfix"><a href="#">Following<span class="badge pull-right">0</span></a></li>
                <li class="clearfix"><a href="#">Followers<span class="badge pull-right">0</span></a></li>
               
            </ul>
        </div>
        </div>
    </div>
</body>

<nav class="navbar navbar-default navbar-fixed-bottom" id="bottom-music-player" role="navigation">
@if (Model.Songs.Count() > 0)
{
    @Html.Partial("_MusicPlayerPartial", Model.Songs)
}
</nav>
  <!-- Modal -->
<div class="modal fade" id="profileModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">Upload Music</h4>
            </div>
                @using (Html.BeginForm("Save", "Music", FormMethod.Post, new { @enctype = "multipart/form-data" }))
                {
                    <form class="form-horizontal" role="form">
                        <div class="modal-body"> 
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true)
                            <div class="container-fluid">
                                <div>
                                    <div class="col col-lg-9">
                                            <label class="control-label col col-lg-6">Spice up your playlist</label>
                                            <div class="form-group">
                                                
                                                <div class="col-lg-6 input-div">
                                                    <input type="file" multiple name="file" />
                                                </div>
                                            </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <input type="submit" value="Upload" class="btn btn-primary pull-right" />
                            <button type="button" class="btn btn-default pull-right" data-dismiss="modal">Close</button>
                        </div>
                    </form>
                }
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

<!-- Add Playlist Modal -->
<div class="modal fade" id="createPlaylistModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">Create Playlist</h4>
            </div>
            @using (Html.BeginForm("Save", "Music", FormMethod.Post, new { @enctype = "multipart/form-data" }))
            {
                <form class="form-horizontal" role="form">
                    <div class="modal-body">
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true)
                        <div class="container-fluid">
                            <div class="row modal-row">
                                <div class="col col-lg-1">
                                    @*<span class="round-number">1</span>*@
                                </div>
                                <div class="col col-lg-11">
                                    <div>
                                        <h4 class="modal-header-description">Choose a name for your playlist:  </h4>
                                        <form role="form">
                                            <div class="form-group">
                                                <input type="text" class="form-control" id="name-of-room2" placeholder="Enter a group name">
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <input type="submit" value="Create" class="btn btn-primary pull-right" />
                        <button type="button" class="btn btn-default pull-right" data-dismiss="modal">Close</button>
                    </div>
                </form>
            }
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

<script type="text/javascript">
    $(document).ready(function () {
        $('#delete-button').hide();
        $('#delete-song').hide();
        var audio;
        var playlist;
        var tracks;
        var current;
        var offset = 6; //number of td tags per row
        var currentSong = $('#current-song');
        var currentArtist = $('#current-artist');
        var DeleteSong = $('#testtest'); 
        var DeleteAlbum = $('#testtest2');

        function init() {
            current = 0 * offset;
            audio = $('#audio');
            playlist = $('#music-playlist');
            tracks = playlist.find('tbody tr a');
            len = tracks.length - 1;
            audio[0].play();
            var song = playlist.find('tbody tr a')[current];
            var artist = playlist.find('tbody tr a')[current + 1];
            var album = playlist.find('tbody tr a')[current + 2];
            currentSong.text($(song).text());
            currentArtist.text($(artist).text());
            
            playlist.find('a').click(function (e) {
                e.preventDefault();
                link = $(this);

                current = (link.parent().parent().parent().index()) * 5;
                run($(link), audio[0]);
            });

            playlist.find('button').click(function (e) {
                e.preventDefault();
                song = $(this).parent().prev().prev().prev().prev().prev();
                album = $(this).parent().prev().prev().prev();
                position = $(this).parent().parent();
                current = (song.parent().parent().parent().parent().index()) * 6;
                DeleteSong.text($(song).text());
                DeleteAlbum.text($(album).text());
                $(position).fadeOut(400);
                audio[0].play();
                remove($(song), $(album));
                
            });

            audio[0].addEventListener('ended', function (e) {
                current = current + 5;
                if (current == len) {
                    current = 0;
                    link = playlist.find('tbody tr a')[0];
                } else {
                    link = playlist.find('tbody tr a')[current];
                }
                run($(link), audio[0]);
            });
        }

        function remove(song, album) {
            var SongName = $(song).text();
            var Album = $(album).text();
            $.ajax({
                url: "/Playlist/Delete",
                data: { SongName: SongName, Album: Album },
                success: function (data) {
                    $('#music-playlist').html(data);
                }

            });
        }

        function run(link, player) {
            player.src = $(link).attr('href');
            selectedRow = $(link).parent().parent().parent();
            selectedRow.addClass('active-link').siblings().removeClass('active-link');
            audio[0].load();
            audio[0].play();
            var song = playlist.find('tbody tr a')[current];
            var artist = playlist.find('tbody tr a')[current + 1];
            currentSong.text($(song).text());
            currentArtist.text($(artist).text());
        }

        $('#profile-search').keyup(function () {
            search();
        });

        $(document).keyup(function (e) {
            var char = e.which;
            console.log(e.which);

            //If space or pause/play button is pressed, play or pause music
            if (char == 32 || char == 179) {
                toggleMusic();
            }

            //If left arrow or rewind button is pressed, go back one song
            if (char == 37 || char == 177) {
                previousSong();
            }

            //If right arrow is fast-forward button pressed, go forward one song
            if (char == 39 || char == 176) {
                nextSong();
            }
        });



        function toggleMusic() {
            var audio = $('#audio');
            if (audio[0].paused == false) {
                audio[0].pause();
            } else {
                audio[0].play();
            }
        };

        function previousSong() {
            current = current - 5;
            if (current == len) {
                current = 0;
                link = playlist.find('tbody tr a')[0];
            } else {
                link = playlist.find('tbody tr a')[current];
            }
            run($(link), audio[0]);
        }

        function nextSong() {
            current = current + 5;
            if (current == len) {
                current = 0;
                link = playlist.find('tbody tr a')[0];
            } else {
                link = playlist.find('tbody tr a')[current];
            }
            run($(link), audio[0]);
        }

        function search() {
            var query = $('#profile-search').val();
            $.ajax({
                url: "/Playlist/Search",
                data: { query: query },
                success: function (data) {
                    $('#music-playlist').html(data);
                }

            });
        }

        init();
    });



    function init() {
        current = 0 * offset;
        audio = $('#audio');
        playlist = $('#music-playlist');
        tracks = playlist.find('tbody tr a');
        len = tracks.length - 1;
        audio[0].play();
        var song = playlist.find('tbody tr a')[current];
        var artist = playlist.find('tbody tr a')[current + 1];
        currentSong.text($(song).text());
        currentArtist.text($(artist).text());

        playlist.find('a').click(function (e) {
            e.preventDefault();
            link = $(this);

            current = (link.parent().parent().parent().index()) * 5;
            run($(link), audio[0]);
        });

        
        audio[0].addEventListener('ended', function (e) {
            current = current + 5;
            if (current == len) {
                current = 0;
                link = playlist.find('tbody tr a')[0];
            } else {
                link = playlist.find('tbody tr a')[current];
            }
            run($(link), audio[0]);
        });
    }
</script>